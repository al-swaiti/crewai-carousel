research_task:
  description: >
    Conduct thorough research about {topic_content}.
    
    Your mission:
    1. Find {pages_numbers} key insights, developments, or findings
    2. For EACH insight, include specific supporting data:
       - Statistics, percentages, or numbers
       - Recent dates or timeframes
       - Specific examples or case studies
    3. Focus on recent developments (last 1-2 years preferred)
    4. Prioritize actionable, interesting insights over general knowledge
    
    Format: For each of the {pages_numbers} points, provide:
    - A clear, engaging title/headline (10-15 words)
    - A brief explanation (2-3 sentences)
    - Supporting data/statistics
  
  expected_output: >
    A clearly structured list of {pages_numbers} research findings.
    Each finding should have:
    - title: A compelling headline
    - description: 2-3 sentence explanation
    - data: Supporting statistics, numbers, or specific facts
    
    Example format:
    1. AI Models Now Process 10 Trillion Parameters
       Description: The latest generation of AI models has reached unprecedented scale...
       Data: GPT-4 uses 1.76 trillion parameters, a 10x increase from 2022 models
    
    2. Enterprise AI Adoption Jumps 300% in 2024
       Description: Businesses are rapidly integrating AI...
       Data: 67% of Fortune 500 companies now use AI in production (up from 22% in 2023)

visual_design_task:
  description: >
    Act as a Creative Director and a Defensive Coder. Your mission is to create a compelling and concise set of visuals for the report. Not every slide needs an image.

    **Part 1: The Cover Page (Mandatory First Action)**
    Your absolute first action is to design and generate the main cover image for the report
    based on the overall `{topic_content}`. Create a stunning, award-winning image with an 
    aspect ratio of `{aspect_ratio}`.

    **Part 2: The Content Visuals (Be Selective and Robust)**
    After the cover is done, review all `{pages_numbers}` research findings. **You will only create visuals for 2-3 of the most impactful findings.**

    When you decide to create a data chart using the Code Interpreter:
    1.  Write simple, robust, and non-interactive plotting code.
    2.  **CRITICAL:** Your code MUST save the generated chart to a file (e.g., `plt.savefig('images/chart.png')`).
    3.  Handle potential errors gracefully.

    Save all generated images to the 'images/' directory with descriptive filenames.
  expected_output: >
    A JSON object mapping each research finding (and a dedicated "cover_page" key) to its
    visual file path. If no visual was created for a point, the value should be "No visual created."
    
    Example:
    {
      "cover_page": "images/award_winning_cover.png",
      "AI Models Now Process 10 Trillion Parameters": "images/ai_parameters_chart.png",
      "The Rise of AI in Creative Fields": "images/ai_creativity_concept.png",
      "Ethical Considerations of AI": "No visual created."
    }

content_structuring_task:
  description: >
    Synthesize research and visuals into a print-optimized content specification.
    
    **SLIDE 0 (COVER PAGE):** Your first step is to define the final, polished text for the cover page:
    - Main title: {topic_content}
    - Subtitle: "Key Insights & Trends" or a more creative alternative
    - Date: Current date in format "October 2025"
    
    **SLIDES 1-{pages_numbers}:** For each carousel slide, create:
    - Headline (6-10 words, action-oriented, sentence case)
    - Supporting text (25-40 words maximum, scannable)
    - Data callout (1-2 key statistics in LARGE format)
    - Image specification (path + placement guidance)
    
    Ensure logical narrative flow: Hook → Build → Resolve
  expected_output: >
    A valid JSON object containing two keys: 'cover_page' and 'slides'.
    - 'cover_page': An object with 'title', 'subtitle', and 'date'.
    - 'slides': A list of slide objects, each with 'title', 'description', 'data', and 'image_path'.
    
    CRITICAL: Output ONLY the JSON object, nothing else.

html_design_task:
  description: >
    You are a Web Developer. Your task is to take a structured JSON content brief and write the HTML code for a professional report.

    **Your Input:** You will receive a JSON object from the previous task. This object contains a `cover_page` and a list of `slides`. Each slide object has an `image_path` key.

    **Your Core Logic:**
    1.  Parse the JSON input.
    2.  For the cover page, use the `cover_page.image_path` for the background image.
    3.  Iterate through the `slides` list. For each slide, you **MUST** take the exact value from the `image_path` key and use it as the `src` attribute for that slide's `<img>` tag.
        - Example: If `image_path` is `"images/chart.png"`, the HTML must be `<img src="images/chart.png" ...>`.
        - If `image_path` is `"No visual created."`, you must not include an `<img>` tag for that slide.

    **Styling Requirements (Print-Ready Checklist):**
    - All CSS must be in a single `<style>` tag in the `<head>`.
    - Include an `@media print` block to optimize for printing (e.g., `margin: 0;`).
    - Use `page-break-inside: avoid;` on slide containers to prevent them from splitting across pages.

    **Final Action:**
    Your final and most important action is to take the complete HTML string you have generated and use the `write_file` tool to save it as `report.html`.
  expected_output: >
    A confirmation message from the `write_file` tool indicating that `report.html` was successfully created. For example: "File report.html written successfully."

pdf_conversion_task:
  description: >
    Take the 'report.html' file generated by the previous step and convert it into a
    professional, print-ready PDF document named 'report.pdf', ensuring the output
    matches the original `{aspect_ratio}`.
  expected_output: >
    A confirmation message indicating the successful creation of 'report.pdf'.